#!/usr/bin/env ruby

class Logo

  def initialize(grid_size, program)
    @grid_size = grid_size
    @program = parse(program)
    @grid = []
    # setup_grid
    # print_grid
    run
  end

  def setup_grid
    @grid_size.times do |i|
      row = []
      @grid_size.times do |j|
        row << "."
      end
      @grid << row
    end
  end

  def parse(program)
    commands = program.split
    stack = []
    i = 0
    while i < commands.size
      if %w[FD RT LT BK].include?(commands[i])
        stack << [commands[i], commands[i + 1]]
        i += 2
      elsif commands[i] == "REPEAT"
        repeat = []
        times = commands[i + 1]
        while commands[i] != "]"
          if %w[FD RT LT BK].include?(commands[i])
            repeat << [commands[i], commands[i + 1]]
            i += 2
          else
            i += 1
          end
        end
        stack << ["REPEAT", times, repeat]
        i += 2
      else
        i += 1
      end
    end
    stack
  end

  def print_grid
    puts @grid.map { |row| row.join("") }.join("\n")
  end

  def run
    @program.each do |command|
      if command[0] == "REPEAT"
        command[1].to_i.times do
          command[2].each do |repeat_command|
            puts repeat_command[0] + " " + repeat_command[1]
          end
        end
      else
        puts command[0] + " " + command[1]
      end
    end
  end

end

filename = ARGV[0]
if File.exists?(filename)
  data = File.read(filename)
  grid_size, program = data.split("\n\n")
  Logo.new(grid_size.to_i, program)
else
  puts "error:could not read file #{filename}."
end



